name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run isort
        run: |
          source venv/bin/activate
          isort .

      - name: Run black
        run: |
          source venv/bin/activate
          black .
      
      - name: Run tests with coverage
        run: |
          source venv/bin/activate
          pip install pipenv
          pipenv run coverage run -m pytest
          pipenv run coverage report

      - name: Enforce 90% test coverage
        run: |
          COVERAGE=$(pipenv run coverage report | tail -1 | awk '{print $4}' | tr -d '%')
          if (( $(echo "$COVERAGE < 90" | bc -l) )); then
            echo "Test coverage $COVERAGE% is below required 90%"
            exit 1
          fi

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create release tag
        id: create_tag
        run: |
          TAG="v$(date +%Y%m%d%H%M%S)"
          echo "Generated tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $TAG
          git push origin $TAG

      - name: Show release tag
        run: |
          echo "âœ… Release tag created: ${{ steps.create_tag.outputs.tag }}"

      - name: Upload release tag to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-tag
          path: |
            .git/refs/tags/${{ steps.create_tag.outputs.tag }}

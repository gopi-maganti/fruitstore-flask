name: Deploy the Flask App

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}
          fetch-depth: 0

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 90m
          command_timeout: 60m
          script: |
            set -e

            echo "✅ Navigating to home directory"
            cd /home/ec2-user

            echo "🧹 Cleaning previous pyenv installation"
            rm -rf "$HOME/.pyenv"

            echo "📦 Installing dependencies for Python build"
            sudo yum groupinstall -y "Development Tools" || true
            sudo yum install -y \
              gcc zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel \
              openssl11 openssl11-devel libffi-devel wget make git \
              tk-devel gdbm-devel xz-devel ncurses-devel patch \
              libuuid-devel libtirpc-devel curl-devel \
              pkgconfig

            echo "📥 Installing pyenv"
            curl https://pyenv.run | bash
            export PYENV_ROOT="$HOME/.pyenv"
            export PATH="$PYENV_ROOT/bin:$PATH"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"

            echo "🐍 Installing Python 3.12.2 via pyenv"
            export CFLAGS="-I/usr/include/openssl11"
            export LDFLAGS="-L/usr/lib64/openssl11 -Wl,-rpath=/usr/lib64/openssl11"
            export PKG_CONFIG_PATH="/usr/lib64/openssl11/pkgconfig"
            export LD_LIBRARY_PATH="$PYENV_ROOT/versions/3.12.2/lib:$LD_LIBRARY_PATH"
            pyenv install -s 3.12.2
            pyenv global 3.12.2

            echo "✅ Python version: $(python --version)"

            echo "🧬 Cloning repo if not exists"
            if [ ! -d "fruitstore-flask" ]; then
              git clone https://github.com/gopi-maganti/fruitstore-flask.git
            fi

            cd fruitstore-flask

            echo "🌿 Checking out release tag: ${{ github.event.inputs.tag }}"
            git fetch --all --tags
            git checkout "refs/tags/${{ github.event.inputs.tag }}"

            echo "🐍 Creating virtual environment"
            python -m venv venv
            source venv/bin/activate
            export PATH="$(pwd)/venv/bin:$PATH"
            export PYTHONPATH="$(pwd)/venv/lib/python3.12/site-packages"

            echo "📍 Python: $(which python)"
            echo "📍 Pip: $(which pip)"

            echo "♻️ Cleaning existing packages in venv"
            pip freeze | xargs pip uninstall -y || true

            echo "📦 Installing dependencies"
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "🔎 Verifying boto3 inside venv"
            python -c "import boto3" 2>/dev/null || {
              echo "⚠️ boto3 import failed. Reinstalling..."
              pip install boto3
              python -c "import boto3" || {
                echo "❌ boto3 still not found. Exiting."
                exit 1
              }
            }

            echo "🔐 Running DB secrets init script"
            python scripts/init_env.py

            echo "🚀 Restarting Flask app using Gunicorn"
            pkill gunicorn || true
            nohup gunicorn -w 4 -b 0.0.0.0:8000 run:app > gunicorn.log 2>&1 &

            echo "🎉 Deployment completed successfully for tag ${{ github.event.inputs.tag }}"

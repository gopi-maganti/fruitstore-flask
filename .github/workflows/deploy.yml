name: Deploy the Flask App

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}
          fetch-depth: 0

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 90m
          command_timeout: 60m
          script: |
            set -e

            echo "✅ Navigating to home directory"
            cd /home/ec2-user

            echo "✅ Installing all dependencies for pyenv and Python build"
            sudo yum groupinstall -y "Development Tools"
            sudo yum install -y \
              gcc zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel \
              openssl11 openssl11-devel libffi-devel wget make git \
              tk-devel gdbm-devel xz-devel ncurses-devel patch \
              libuuid-devel libtirpc-devel curl-devel \
              pkgconfig

            echo "✅ Removing pyenv if it exists"
            rm -rf $HOME/.pyenv

            echo "✅ Installing pyenv"
            curl https://pyenv.run | bash

            export PYENV_ROOT="$HOME/.pyenv"
            export PATH="$PYENV_ROOT/bin:$PATH"
            export PATH="$PYENV_ROOT/shims:$PATH"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"

            echo "✅ Installing Python 3.12.2 with pyenv"
            export CFLAGS="-I/usr/include/openssl11"
            export LDFLAGS="-L/usr/lib64/openssl11 -Wl,-rpath=/usr/lib64/openssl11"
            export PKG_CONFIG_PATH="/usr/lib64/openssl11/pkgconfig"
            export LD_LIBRARY_PATH="$PYENV_ROOT/versions/3.12.2/lib:$LD_LIBRARY_PATH"

            pyenv install -s 3.12.2
            pyenv global 3.12.2

            echo "✅ Adding Python 3.12.2 bin directory to PATH"
            export PATH="$PYENV_ROOT/versions/3.12.2/bin:$PATH"

            echo "✅ Cloning repo if not exists"
            if [ ! -d "fruitstore-flask" ]; then
              git clone https://github.com/${{ github.repository }}.git
            fi

            cd fruitstore-flask

            echo "✅ Checking out tag ${{ github.event.inputs.tag }}"
            git fetch --all --tags
            git checkout ${{ github.event.inputs.tag }}

            echo "✅ Creating virtual environment"
            python -m venv venv
            source venv/bin/activate

            echo "✅ Installing app dependencies"
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "✅ Fetching DB credentials from AWS Secrets Manager"
            python scripts/init_env.py

            echo "✅ Restarting Flask app with Gunicorn"
            pkill gunicorn || true
            nohup gunicorn -w 4 -b 0.0.0.0:8000 run:app > gunicorn.log 2>&1 &

            echo "🎉 Deployment completed successfully for tag ${{ github.event.inputs.tag }}"
